//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: 
//   Authors: Sotin Nikoaly aka VirRus77
//   Version: 1.0
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 02.02.2020 - Create
//------------------------------------------------

struct I3DTriShort{
  ushort P1;
  ushort P2;
  ushort P3;
};

struct I3DTriInt{
  uint P1;
  uint P2;
  uint P3;
};

struct I3DVector{
  float P1;
  float P2;
  float P3;
};

struct I3DUV{
  float V;
  float U;
};

struct UnkFloat3{
  float unk1;
  float unk2;
  float unk3;
};

void Align(int mod){
  local int pos = FTell();
  local int newPos = ((pos+3)/4)*4;
  if(newPos - pos != 0) {
    byte Skip[newPos - pos] <bgcolor=0x808080,fgcolor=0x0000F0>;
  }
  //FSeek(newPos);
  Printf("Seed: %d -> %d\n", pos, newPos);
}

struct SizedContent {
  int size;
  byte Content[size];
};

struct TypedSizedContent {
  int type;
  SizedContent sizedContent;
};

/*
struct ShortFlag {
  short Flag_1: 1 <bgcolor=0x20F0F0>;
  short Flag_2: 1 <bgcolor=0xF08080>;
  short Flag_3: 1 <bgcolor=0x20F080>;
  short Flag_4: 1 <bgcolor=0x20F0F0>;
  short Flag_5: 1 <bgcolor=0xF08080>;
  short Flag_6: 1 <bgcolor=0x20F080>;
  short Flag_7: 1 <bgcolor=0x20F0F0>;
  short Flag_8: 1 <bgcolor=0xF08080>;
  short Flag_9: 1 <bgcolor=0x20F080>;
  short Flag_10: 1 <bgcolor=0x20F0F0>;
  short Flag_11: 1 <bgcolor=0xF08080>;
  short Flag_12: 1 <bgcolor=0x20F080>;
  short Flag_13: 1 <bgcolor=0x20F0F0>;
  short Flag_14: 1 <bgcolor=0xF08080>;
  short Flag_15: 1 <bgcolor=0x20F080>;
  short Flag_16: 1 <bgcolor=0x20F0F0>;
};
*/

typedef struct {
  if(IsLittleEndian()) {
    uint Flag_1: 1 <bgcolor=0x20F0F0>;
    uint Flag_2: 1 <bgcolor=0xF08080>;
    uint Flag_3: 1 <bgcolor=0x20F080>;
    uint Flag_4: 1 <bgcolor=0x20F0F0>;
    uint Flag_5: 1 <bgcolor=0xF08080>;
    uint Flag_6: 1 <bgcolor=0x20F080>;
    uint Flag_7: 1 <bgcolor=0x20F0F0>;
    uint Flag_8: 1 <bgcolor=0xF08080>;
    uint Flag_9: 1 <bgcolor=0x20F080>;
    uint Flag_10: 1 <bgcolor=0x20F0F0>;
    uint Flag_11: 1 <bgcolor=0xF08080>;
    uint Flag_12: 1 <bgcolor=0x20F080>;
    uint Flag_13: 1 <bgcolor=0x20F0F0>;
    uint Flag_14: 1 <bgcolor=0xF08080>;
    uint Flag_15: 1 <bgcolor=0x20F080>;
    uint Flag_16: 1 <bgcolor=0x20F0F0>;
    uint Flag_17: 1 <bgcolor=0xF08080>;
    uint Flag_18: 1 <bgcolor=0x20F080>;
    uint Flag_19: 1 <bgcolor=0x20F0F0>;
    uint Flag_20: 1 <bgcolor=0xF08080>;
    uint Flag_21: 1 <bgcolor=0x20F080>;
    uint Flag_22: 1 <bgcolor=0x20F0F0>;
    uint Flag_23: 1 <bgcolor=0xF08080>;
    uint Flag_24: 1 <bgcolor=0x20F080>;
    uint Flag_25: 1 <bgcolor=0x20F0F0>;
    uint Flag_26: 1 <bgcolor=0xF08080>;
    uint Flag_27: 1 <bgcolor=0x20F080>;
    uint Flag_28: 1 <bgcolor=0x20F0F0>;
    uint Flag_29: 1 <bgcolor=0xF08080>;
    uint Flag_30: 1 <bgcolor=0x20F080>;
    uint Flag_31: 1 <bgcolor=0x20F0F0>;
    uint Flag_32: 1 <bgcolor=0xF08080>;
  } else {
    uint Flag_32: 1 <bgcolor=0xF08080>;
    uint Flag_31: 1 <bgcolor=0x20F0F0>;
    uint Flag_30: 1 <bgcolor=0x20F080>;
    uint Flag_29: 1 <bgcolor=0xF08080>;
    uint Flag_28: 1 <bgcolor=0x20F0F0>;
    uint Flag_27: 1 <bgcolor=0x20F080>;
    uint Flag_26: 1 <bgcolor=0xF08080>;
    uint Flag_25: 1 <bgcolor=0x20F0F0>;
    uint Flag_24: 1 <bgcolor=0x20F080>;
    uint Flag_23: 1 <bgcolor=0xF08080>;
    uint Flag_22: 1 <bgcolor=0x20F0F0>;
    uint Flag_21: 1 <bgcolor=0x20F080>;
    uint Flag_20: 1 <bgcolor=0xF08080>;
    uint Flag_19: 1 <bgcolor=0x20F0F0>;
    uint Flag_18: 1 <bgcolor=0x20F080>;
    uint Flag_17: 1 <bgcolor=0xF08080>;
    uint Flag_16: 1 <bgcolor=0x20F0F0>;
    uint Flag_15: 1 <bgcolor=0x20F080>;
    uint Flag_14: 1 <bgcolor=0xF08080>;
    uint Flag_13: 1 <bgcolor=0x20F0F0>;
    uint Flag_12: 1 <bgcolor=0x20F080>;
    uint Flag_11: 1 <bgcolor=0xF08080>;
    uint Flag_10: 1 <bgcolor=0x20F0F0>;
    uint Flag_9: 1 <bgcolor=0x20F080>;
    uint Flag_8: 1 <bgcolor=0xF08080>;
    uint Flag_7: 1 <bgcolor=0x20F0F0>;
    uint Flag_6: 1 <bgcolor=0x20F080>;
    uint Flag_5: 1 <bgcolor=0xF08080>;
    uint Flag_4: 1 <bgcolor=0x20F0F0>;
    uint Flag_3: 1 <bgcolor=0x20F080>;
    uint Flag_2: 1 <bgcolor=0xF08080>;
    uint Flag_1: 1 <bgcolor=0x20F0F0>;
  }
} UnknownFlag7 ;

string FlagComment7(UnknownFlag7 &flag){
  string print;
  SPrintf(
    print,
    "%d %d %d %d %d %d %d %d | %d %d %d %d %d %d %d %d | %d %d %d %d %d %d %d %d | %d %d %d %d %d %d %d %d",
    flag.Flag_1,
    flag.Flag_2,
    flag.Flag_3,
    flag.Flag_4,
    flag.Flag_5,
    flag.Flag_6,
    flag.Flag_7,
    flag.Flag_8,
    flag.Flag_9,
    flag.Flag_10,
    flag.Flag_11,
    flag.Flag_12,
    flag.Flag_13,
    flag.Flag_14,
    flag.Flag_15,
    flag.Flag_16,
    flag.Flag_17,
    flag.Flag_18,
    flag.Flag_19,
    flag.Flag_20,
    flag.Flag_21,
    flag.Flag_22,
    flag.Flag_23,
    flag.Flag_24,
    flag.Flag_25,
    flag.Flag_26,
    flag.Flag_27,
    flag.Flag_28,
    flag.Flag_29,
    flag.Flag_30,
    flag.Flag_31,
    flag.Flag_32
  );
  return  print;
}

// Comment on little
// BigEndian(); 

uint nameLen;
char Name[nameLen] <fgcolor=0xF0F000>;
Align(4);
// 0x20F080 0x20F0F0 0xF08080
uint ShapeId <bgcolor=0x20F080,fgcolor=0x800000>;

float BoundingVolumeX  <bgcolor=0x20F0F0>;
float BoundingVolumeY  <bgcolor=0xF08080>;
float BoundingVolumeZ  <bgcolor=0x20F080>;
float BoundingVolumeR  <bgcolor=0x20F0F0>;
int VertexCount <bgcolor=0xF08080>;
int Unknown6 <bgcolor=0x20F080>;
int Vertices <bgcolor=0x20F0F0>;

UnknownFlag7 Unknown7 <comment=FlagComment7>;

int Unknown8 <bgcolor=0x20F080>;
int UvCount <bgcolor=0x20F0F0>;
int Unknown9 <bgcolor=0xF08080>;
int VertexCount2 <bgcolor=0x20F080>;

if(Unknown6 == 2){
  int unk6_1;
  int unk6_2;
  int unk6_3;
  int unk6_4;
}

if(Vertices > 0xFFFF){
  I3DTriInt Triangles[VertexCount / 3] <bgcolor=0x20F0F0>;
} else {
  I3DTriShort Triangles[VertexCount / 3] <bgcolor=0x20F0F0>;
}
Align(4);
I3DVector Positions[Vertices] <bgcolor=0xF08080>;

if (Unknown7.Flag_1) {
    float UNK_8_1 [Vertices * 3] <bgcolor=0x20F080,fgcolor=0x20F080>;
}
if (Unknown7.Flag_8) {
    float UNK_8_82[Vertices * 4] <bgcolor=0x20F0F0,fgcolor=0xF080F0>;
}
if (Unknown7.Flag_2) {
    float UNK_8_22[Vertices * 2] <bgcolor=0x20F0F0,fgcolor=0x20F0F0>;
}

if (Unknown7.Flag_3) {
  float UNK_8_3 [Vertices * 2]<bgcolor=0xF08080,fgcolor=0xF08080>;
}

if (Unknown7.Flag_4) {
  float UNK_8_4 [Vertices * 2]<bgcolor=0x20F0F0,fgcolor=0xF080F0>;
}

if (Unknown7.Flag_6) {
  float UNK_8_6[Vertices * 4] <bgcolor=0x20F080,fgcolor=0x20F080>;
}
/*
if(Unknown7.Flag_8) {
  float Unk2[UvCount*4]<bgcolor=0xE000F0>;
}
*/

//I3DUV UVs[UvCount] <bgcolor=0x20F0F0>;

int AdditionCounts <bgcolor=0xE000F0>;
if (AdditionCounts > 0) {
  TypedSizedContent Content[AdditionCounts] <bgcolor=0xF08080,optimize=false>;
}

short Unknown10;
short Unknown10_2;
int Unknown11;

byte Positions2[3776] <bgcolor=0xF08080>;
byte Positions3[3088] <bgcolor=0xF0F080>;